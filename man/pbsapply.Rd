% Generated by roxygen2 (4.0.1): do not edit by hand
\name{pbsapply}
\alias{pbsapply}
\title{Sapply with an auto-generated shiny progress bar.}
\usage{
pbsapply(X, FUN, session = getDefaultReactiveDomain(), message = NULL,
  detail = NULL, ..., simplify = TRUE, USE.NAMES = TRUE)
}
\arguments{
\item{X}{a vector (atomic or list) or an expression object.
Other objects (including classed objects) will be coerced by
\code{base::as.list}.}

\item{FUN}{The function to apply to the elements of \code{X}.}

\item{session}{The Shiny session object, as provided by
shinyServer to the server function.}

\item{message}{A single-element character vector; the message
to be displayed to the user, or \code{NULL} to hide the current
message (if any).}

\item{detail}{A single-element character vector; the detail
message to be displayed to the user, or \code{NULL} to hide the
current detail message (if any). The detail message will be
shown with a de-emphasized appearance relative to \code{message}.}

\item{...}{Additional argument list that might not ever
 be used.}

\item{simplify}{logical or character string; should the result
be simplified to a vector, matrix or higher dimensional array if
possible? The default value, \code{TRUE}, returns a vector or
matrix if appropriate, whereas if \code{simplify = "array"} the
result may be an array of “rank” \code{(=length(dim(.))}) one
higher than the result of \code{FUN(X[[i]])}.}

\item{USE.NAMES}{logical; use names if the first \code{...} argument
has names, or if it is a character vector, use that character
vector as the names.}
}
\value{
A list of results from \code{FUN} applied over \code{X}.
}
\description{
When called within a shiny app, this function will auto-
generate a progress bar, update the progress bar as evaluation
progresses, and close the progress bar upon completion.
}
\examples{
shiny::shinyApp( ui=fluidPage(titlePanel("Progress Bars!!"),
                                        fluidRow( column(3, actionButton('go', label="Start")),
                                                  column(3, verbatimTextOutput('length')))  ),
                           server=shinyServer( function(input, output, session){
                                                      output$length = renderText({
                                                          if(input$go > 0){
                                                             x=pbsapply(c(1:20000), FUN=jitter, session=session, message="My Message", simplify=TRUE, USE.NAMES=FALSE)
                                                             paste0('Result length: ', length(x))
                                                             }
                                                      })
                                                }) )
}
\seealso{
\code{\link{}} and \code{\link{}}
}

